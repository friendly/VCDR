\begin{Exercises}

\exercise The packages \pkg{vcd} and \pkg{vcdExtra} contain many data sets with some
examples of analysis and graphical display.  The goal of this exercise is to
familiarize yourself with these resources.

You can get a brief summary of
these using the function \func{datasets} from \pkg{vcdExtra}.  Use the following to get a list of
these with some characteristics and titles.
<<datasets>>=
ds <- datasets(package = c("vcd", "vcdExtra"))
str(ds, vec.len = 2)
@
  \begin{enumerate*}
    \item How many data sets are there altogether?  How many are there in each package?
    \begin{ans}
    \func{nrow} gives the number of rows in a data frame. \func{table} for a single variable gives the frequencies for each level.
		<<ex2.1a >>=
		ds <- datasets(package=c("vcd", "vcdExtra"))
		nrow(ds)
		table(ds$Package)
		@
    \end{ans}
    
    
    \item Make a tabular display of the frequencies by \code{Package} and \code{class}.
    \begin{ans}
    Use \func{table}, but now for \code{Package} and \code{class}.
    <<ex2.1b>>=
    table(ds$Package, ds$class)
    @
    \end{ans}
    
    
    \item Choose one or two data sets from this list, and examine their help files
    (e.g., \code{help(Arthritis)} or \code{?Arthritis}).  You can use, e.g.,
    \code{example(Arthritis)} to run the \R code for a given example.
    \begin{ans}
    Run the following types of commands:
    << ex2.1c, eval=FALSE>>=
    ?Arthritis          #Help Files
    ?Baseball           #Help Files
    example(Arthritis)  #Example Syntax/Analysis
    example(Baseball)   #Example Syntax/Analysis
    @
    \end{ans}
    
    
  \end{enumerate*}

\exercise For each of the following data sets in the \Rpackage{vcdExtra}, identify which are response variable(s)
and which are explanatory. For factor variables, which are unordered (nominal) and which
should be treated as ordered? Write a sentence or two describing substantitive questions of interest for analysis
of the data. (\emph{Hint}: use 
\code{data(foo, package="vcdExtra")} to load, and \code{str(foo)}, 
  \code{help(foo)} to examine data set \code{foo}.)
  \begin{enumerate*}
    \item Abortion opinion data: \data{Abortion}
    \begin{ans}
      \texttt{Support\_Abortion} is the response, \texttt{Sex} and \texttt{Status} are binary, nominal explanatory variables. 
      From \texttt{help(Abortion)},
      How does support for abortion depend on sex and status?
      << ex2.2a>>=
      data(Abortion, package="vcdExtra")
      str(Abortion)
      @
    \end{ans}
        
    \item Caesarian Births: \data{Caesar}
    \begin{ans}
      \texttt{Infection} is the response, \texttt{Risk}, \texttt{Antibiotics} and \texttt{Planned} are binary, nominal explanatory
      variables. 
      << ex2.2b>>=
      data(Caesar, package="vcdExtra")
      str(Caesar)
      @
    \end{ans}
        
    \item Dayton Survey: \data{DaytonSurvey}
    \begin{ans}
      In \texttt{DaytonSurvey}, the variables \texttt{cigarette}, \texttt{alcohol}, and \texttt{marijuana} can all be treated as
      response variables.
      \texttt{sex} and \texttt{race} are potential explanatory variables. Potentially interesting questions are how
      each of the responses depend on \texttt{sex} and \texttt{race}, and how they vary jointly.
      << ex2.2c, eval=FALSE>>=
      data(DaytonSurvey, package="vcdExtra")
      str(DaytonSurvey)
      @
    \end{ans}
        
    \item Minnesota High School Graduates: \data{Hoyt}
    \begin{ans}
      \texttt{Status} is the response, \texttt{Rank}, \texttt{Occupation}, and \texttt{Sex} are explanatory variables. 
      Both \texttt{Rank} and \texttt{Occupation} are ordinal. How does \texttt{Status} vary with \texttt{Rank}, \texttt{Occupation}, and \texttt{Sex}?
      << ex2.2d, eval=FALSE>>=
      data(Hoyt, package="vcdExtra")
      str(Hoyt)
      @
    \end{ans}    
    
  \end{enumerate*}

\exercise The data set \data{UCBAdmissions} is a 3-way table of frequencies
classified by \var{Admit}, \var{Gender}, and \var{Dept}.
  \begin{enumerate*}
    \item Find the total number of cases contained in this table.
    \begin{ans}
      For a \texttt{table} object, just use \texttt{sum()}
      << ex2.3a>>=
      data(UCBAdmissions)
      sum(UCBAdmissions)
      @
    \end{ans}
        
    \item For each department, find the total number of applicants.
    \begin{ans}
      Use \code{margin.table(UCBAdmissions, 3)} to find the marginal total for the third dimension (\code{dept}).
      << ex2.3b>>=
      margin.table(UCBAdmissions, 3)
      @

    \end{ans}
        
    \item For each department, find the overall proportion of applicants who were admitted.
    \begin{ans}
      << ex2.3c>>=
      ucb.df <- as.data.frame(UCBAdmissions)
      abd <- xtabs(Freq ~ Dept + Admit, data=ucb.df)
      prop.table(abd, 1)
      @
    \end{ans}
        
    \item Construct a tabular display of department (rows) and gender (columns), showing
    the proportion of applicants in each cell who were admitted
    relative to the total applicants in that cell.
    \begin{ans}
    \end{ans}
        
  \end{enumerate*}
% \begin{answer}
% 	\begin{enumerate*}
% 		\item Use \code{sum(UCBAdmissions)}.
% 		\item Use \code{margin.table(UCBAdmissions, 3)} to find the marginal total for the third dimension (\code{dept}).
% 		\item
% 	\end{enumerate*}
% \end{answer}

\exercise The data set \data{DanishWelfare} in \pkg{vcd} 
gives a 4-way, $3 \times 4 \times 3 \times 5$ 
table as a data frame in
frequency form, containing the variable \var{Freq} and four factors,
\var{Alcohol},
\var{Income},
\var{Status}, and
\var{Urban}.  The variable \var{Alcohol} can be considered as the
response variable, and the others as possible predictors.

  \begin{enumerate*}
    \item Find the total number of cases represented in this table.
    \begin{ans}
      This is a data set in the form of a frequency data.frame, so sum the \texttt{Freq} variable
      << ex2.4a>>=
      data("DanishWelfare", package="vcd")
      sum(DanishWelfare$Freq)
      @
    \end{ans}
        
    \item In this form, the variables \var{Alcohol} and \var{Income}
    should arguably be considered \emph{ordered} factors.  Change them
    to make them ordered.
    \begin{ans}
      Use \texttt{ordered()} or \texttt{as.ordered()} on the factor variable.  \texttt{str()} will then show them as 
      \texttt{Ord.factor}.
      << ex2.4b, size='footnotesize'>>=
      levels(DanishWelfare$Alcohol)
      DanishWelfare$Alcohol <- as.ordered(DanishWelfare$Alcohol)
      DanishWelfare$Income <- as.ordered(DanishWelfare$Income)
      str(DanishWelfare)
      @
    \end{ans}
        
    \item Convert this data frame to table form, \code{DanishWelfare.tab},
    a 4-way array containing the
    frequencies with appropriate variable names and level names.
    \begin{ans}
      Use \texttt{xtabs()} with \texttt{Freq} as the response.
      
      << ex2.4c>>=
      DanishWelfare.tab <-xtabs(Freq ~ ., data = DanishWelfare)
      str(DanishWelfare.tab)
      @
    \end{ans}
    
    \item The variable \var{Urban} has 5 categories.  Find the total frequencies
    in each of these.  How would you collapse the table to have only
    two categories, \code{City}, \code{Non-city}?
    \begin{ans}
      \texttt{margin.table()} handles the first part; \texttt{collapse.table()} is designed for the second part. 
      It is arguable whether
      \texttt{SubCopenhagen} should be considered City or NonCity.
      << ex2.4d>>=
      margin.table(DanishWelfare.tab, 4)
      DW2 <- vcdExtra::collapse.table(DanishWelfare.tab, 
                                      Urban=c("City","NonCity","City","City","NonCity"))
      head(ftable(DW2))
      @
    \end{ans}
    
    \item Use \func{structable} or \func{ftable} to produce a pleasing
    flattened display of the frequencies in the 4-way table.  Choose the
    variables used as row and column variables to make it easier to compare
    levels of \var{Alcohol} across the other factors.
    \begin{ans}
    \end{ans}
    
  \end{enumerate*}

\exercise The data set \data{UKSoccer} in \pkg{vcd} gives the distributions of
number of goals scored by the 20 teams in the  1995/96 season of the
Premier League of the UK Football Association.
<<UKsoccer-ex>>=
data("UKSoccer", package = "vcd")
ftable(UKSoccer)
@
This two-way table classifies all $20 \times 19 = 380$ games by the joint
outcome (Home, Away), the number of goals scored by the \code{Home} and
\code{Away} teams.
The value \code{4} in this table actually represents 4 or more goals.

  \begin{enumerate*}
    \item Verify that the total number of games represented in this table is 380.
    \begin{ans}
      << ex2.5a>>=
      data("UKSoccer", package="vcd")
      sum(UKSoccer)
      margin.table(UKSoccer)
      @
    \end{ans}
    
    \item Find the marginal total of the number of goals scored by each of
    the home and away teams.
    \begin{ans}
      Use \texttt{margin.table()} for each dimension:
      << ex2.5b>>=
      margin.table(UKSoccer, 1)
      margin.table(UKSoccer, 2)
      @
    \end{ans}
    
    \item Express each of the marginal totals as proportions.
    \begin{ans}
      Use \texttt{prop.table()} on the result of \texttt{margin.table()} for each dimension:
      << ex2.5c>>=
      prop.table(margin.table(UKSoccer, 1))
      prop.table(margin.table(UKSoccer, 2))
      @
    \end{ans}
    
    \item Comment on the distribution of the numbers of home-team and away-team
    goals.  Is there any evidence that home teams score more goals on average?
    \begin{ans}
      You could find the mean number of goals, weighted by their marginal frequencies.
      On average, home teams score about 0.4 more goals.
      << ex2.5d>>=
      weighted.mean(0:4, w=margin.table(UKSoccer,1))
      weighted.mean(0:4, w=margin.table(UKSoccer,2))
      @
      Graphically, you could also compare the marginal frequencies in a mosaic plot, or use \texttt{agreementplot()}.
      << ex2_5d-mosaic, h=4, w=4>>=
      margins <- rbind(home=margin.table(UKSoccer,1), 
                       away=margin.table(UKSoccer,2))
      names(dimnames(margins)) <- c("Team", "Goals")
      margins
      mosaic(margins, shade=TRUE)
      @
    \end{ans}
    

  \end{enumerate*}

\exercise The one-way frequency table \data{Saxony} in \pkg{vcd} records the frequencies
of families with 0, 1, 2, $\dots$ 12 male children, among 6115 families with 12
children.  This data set is used extensively in \chref{ch:discrete}.
<<>>=
data("Saxony", package = "vcd")
Saxony
@
Another data set, \data{Geissler}, in the \Rpackage{vcdExtra}, gives the complete
tabulation of all combinations of \code{boys} and \code{girls} in families with
a given total number of children (\code{size}).  The task here is to create an
equivalent table, \code{Saxony12} from the \data{Geissler} data.
<<>>=
data("Geissler", package = "vcdExtra")
str(Geissler)
@
  \begin{enumerate*}
    \item Use \func{subset} to create a data frame, \code{sax12} containing
    the \data{Geissler} observations in families with \code{size==12}.
    \begin{ans}
      << ex2.6a>>=
      data("Saxony", package="vcd")
      data("Geissler", package="vcdExtra")
      sax12 <- subset(Geissler, size==12)
      sax12
      @
    \end{ans}
    
    \item Select the columns for \code{boys} and \code{Freq}.
    \begin{ans}
      << ex2.6b>>=
      sax12 <- subset(sax12, select=c("boys","Freq"))
      @
    \end{ans}
    
    \item Use \func{xtabs} with a formula, \verb|Freq ~ boys|, to create the
    one-way table.
    \begin{ans}
      << ex2.6c>>=
      Saxony12<-xtabs(Freq~boys, data=sax12)
      Saxony12
      @
    \end{ans}
    
    \item Do the same steps again to create a one-way table, \code{Saxony11},
    containing similar frequencies for families of \code{size==11}.
    \begin{ans}
      << ex2.6d>>=
      sax11 <- subset(Geissler, size==11, select = c("boys","Freq"))
      Saxony11 <- xtabs(Freq~boys, data=sax11)
      Saxony11
      @
    \end{ans}
    
  \end{enumerate*}

\exercise\exhard \emph{Interactive coding of table factors}:  Some statistical and graphical
methods for \ctabs are implemented only for two-way tables, but can be extended
to 3+-way tables by recoding the factors to interactive combinations along the
rows and/or columns, in a way similar to what \func{ftable} and \func{structable}
do for printed displays.

For the \data{UCBAdmissions} data, produce a two-way table object, \code{UCB.tab2},
that has the combinations of \var{Admit} and \var{Gender} as the rows, and
\var{Dept} as its columns, to look like the result below:
\begin{verbatim}
                 Dept
Admit:Gender        A   B   C   D   E   F
  Admitted:Female  89  17 202 131  94  24
  Admitted:Male   512 353 120 138  53  22
  Rejected:Female  19   8 391 244 299 317
  Rejected:Male   313 207 205 279 138 351
\end{verbatim}
%\emph{Hint}: convert to a data frame, manipulate the factors, then convert back to a table.
  \begin{enumerate*}
    % \begin{sloppypar}
    \item Try this the long way:  convert \data{UCBAdmissions} to a data frame (\func{as.data.frame}),
    manipulate the factors (e.g., \func{interaction}), then convert back to
a table (\func{as.data.frame}).
    % \end{sloppypar}
    \begin{ans}
      << ex2.7a>>=
      ucb.df$AG <- with(ucb.df, interaction(Admit, Gender, sep=":"))
      ucb <- subset(ucb.df, select = c("Dept", "AG", "Freq"))
      ucb.tab2 <- xtabs(Freq ~ AG + Dept, data=ucb)
      ucb.tab2
      @
    \end{ans}
    
    \item Try this the short way:  both \func{ftable} and \func{structable} have \func{as.matrix}
    methods that convert their result to a matrix.
    \begin{ans}
      << ex2.7b>>=
      ucb.tab2 <- as.matrix(structable(Dept ~ Admit + Gender, data = UCBAdmissions))
      ucb.tab2
      @
    \end{ans}
    
  \end{enumerate*}

\exercise The data set \data{VisualAcuity} in \pkg{vcd} gives a $4 \times 4 \times 2$
table as a frequency data frame.
<<VA-df>>=
data("VisualAcuity", package = "vcd")
str(VisualAcuity)
@
  \begin{enumerate*}
    \item From this, use \func{xtabs} to create two $4\times 4$ frequency tables, one for
each gender.
    \begin{ans}
      << ex2.8a>>=
      data("VisualAcuity", package="vcd")
      va.tabm <- xtabs(Freq ~ right+left, data = VisualAcuity, subset=gender=="male")
      va.tabm
      va.tabf <- xtabs(Freq ~ right+left, data = VisualAcuity, subset=gender=="female")
      # or, subset after
      va.tab <- xtabs(Freq ~ ., data = VisualAcuity)
      va.tabm <- va.tab[,,"male"]
      va.tabf <- va.tab[,,"female"]
      @
    \end{ans}

    \item Use \func{structable} to create a nicely organized tabular display.
    \begin{ans}
      << ex2.8b>>=
      structable(right ~ left + gender, data = va.tab)
      @
    \end{ans}
    
    \item Use \func{xtable} to create a \LaTeX\ or HTML table.
    \begin{ans}
      << ex2.8.c, eval=FALSE>>=
      library(xtable)
      va.xtab <- xtable(va.tabm)
      print(va.xtab, type="html")
      @
    \end{ans}
    
  \end{enumerate*}

\end{Exercises}

