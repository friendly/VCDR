\begin{Exercises}
  \exercise The \data{Arbuthnot} data in \pkg{HistData} (\exref{ex:arbuthnot1}) also
   contains the variable
   \code{Ratio}, giving the ratio of male to female births.
	  \begin{enumerate*}
	    \item Make a plot of \code{Ratio} over \code{Year}, similar to \figref{fig:arbuthnot1}.
	    What features stand out?  Which plot do you prefer to display the tendency for
	    more male births?
	    \begin{ans}
			<< ex3_1a, h=4, w=7, out.width=".75\\textwidth">>=
			library(HistData)
			data(Arbuthnot, package ="HistData")
			
			   # plot of Ratio by Year
			par(mar=c(5,4,1,1)+.1)
			with(Arbuthnot, {
			  plot(Year, Ratio, type='b', ylim=c(.95, 1.2), 
			       ylab="Birth Ratio (Male/Female)")
			  abline(h=1, col="green", lwd=1)
			  abline(h=mean(Ratio), col="red")
			  text(x=1660, y=1, "Equal M/F ratio", pos=1, col="green3") 
			  Arb.smooth <- loess.smooth(Year,Ratio)
			  lines(Arb.smooth$x, Arb.smooth$y, col="blue", lwd=2)
			})
			@
			The plot is similar to Figure 3.1 in the text. If it is easier to think in terms of probability of a male birth,
			plotting that directly may be preferable.
	    \end{ans}
	    
	    \item Plot the total number of christenings, \code{Males + Females} or \code{Total}
	    (in 000s) over time.
	    What unusual features do you see?
	    \begin{ans}
			<< ex3_1b, h=4, w=7, out.width=".75\\textwidth">>=
			   # total number of Christenings
			with(Arbuthnot, {
			  Total= Males + Females
			  plot(Year, Total, type='b', ylab="Total Christenings (Male + Female)")
			  Arb.smooth <- loess.smooth(Year,Total)
			  lines(Arb.smooth$x, Arb.smooth$y, col="blue", lwd=2)
			})
			@
			
			There was a large decline in births between 1640--1660, corresponding to years of plague in England.
	    \end{ans}
	    
	  \end{enumerate*}

  \exercise Use the graphical methods illustrated in \secref{sec:discrete-distrib}
  to plot a collection of geometric distributions for $p = 0.2, 0.4, 0.6, 0.8$,
  over a range of values of $k = 0, 1, \dots 10$.
  \begin{enumerate}
    \item With \func{xyplot}, try the different plot formats using points
    connected with lines, as in \figref{fig:dbinom2-plot2}, or using points
    and lines down to the origin, as in the panels of \figref{fig:dpois-xyplot1}.
    \begin{ans}
<< ex3_2a, h=6, w=6, out.width='.49\\textwidth'>>=
KL <- expand.grid(k = 0 : 10, p = c(0.2, 0.4, 0.6, 0.8))
geom_df <- data.frame(KL, prob = dgeom(KL$k, KL$p))
geom_df$p = factor(geom_df$p)

library(lattice)
mycol<-palette()[2:5]
xyplot(prob ~ k | p , data = geom_df, type = c("b"), 
       pch = 16, lwd = 4, cex = 1.25, 
       xlab = list("Number of events (k)", cex = 1.25), layout = c(2,2), 
       ylab = list("Probability", cex = 1.25))
xyplot(prob ~ k | p , data = geom_df, type = c("h", "p"), 
       pch = 16, lwd = 4, cex = 1.25, 
       xlab = list("Number of events (k)", cex = 1.25), layout = c(2,2), 
       ylab = list("Probability", cex = 1.25))
@
    \end{ans}
    
    \item Also with \func{xyplot}, produce one version of a multi-line plot
    in a single panel that you think shows well how these distributions change
    with the probability $p$ of success.
    \begin{ans}
<< ex3_2b, h=5, w=7, out.width=".5\\textwidth">>=
geomplt<-xyplot(prob ~ k , data = geom_df, groups = p, 
                type = c("b"), pch = 16, lwd = 4, cex = 1.25, col = mycol, 
                xlab = list("Number of events (k)", cex = 1.25), 
                ylab = list("Probability", cex = 1.25))
library(directlabels)
direct.label(geomplt, list("top.points", cex = 1.25, dl.trans(y = y + 0.1)))
@
    \end{ans}
    
    \item Do the same in a multi-panel version, conditional on $p$.
    \begin{ans}
    << ex3_2c, h=5, w=7, out.width=".75\\textwidth">>=
    xyplot(prob ~ k | p , data = geom_df, type = c("b"), 
           pch = 16, lwd = 4, cex = 1.25, 
           xlab = list("Number of events (k)", cex = 1.1), layout = c(4,1), 
           ylab = list("Probability", cex = 1.25))
    @
    \end{ans}
    
  \end{enumerate}

  \exercise Use the data set \data{WomenQueue} to:
  \begin{enumerate*}
    \item Produce plots analogous to those
  shown in \secref{sec:discrete-intro} (some sort of bar graph of frequencies).
    \begin{ans}
    << ex3_3a>>=
    data("WomenQueue", package = "vcd")
    barplot(WomenQueue,xlab="Number of Women in queues of 10",ylab= "Frequency")
    @
    \end{ans}

    \item Check for goodness-of-fit to the binomial distribution using the
    \func{goodfit} methods described in \secref{sec:fitplot}.
    \begin{ans}
    Note that with \texttt{goodfit()}, you should specify $n=10$ for the binomial distribution as the \texttt{size} parameter.
    << ex3_3b, h=6, w=6, out.width='.49\\textwidth'>>=
    library(vcd)
    gf.women <- goodfit(WomenQueue, type = "binomial", par=list(size=10))
    summary(gf.women)
    @
    \end{ans}
    
    \item Make a reasonable plot showing departure from the binomial distribution.
    \begin{ans}
The simplest plot is the hanging rootogram.  An alternative plot is a "binomialness" plot produced by \texttt{distplot()}.
<< ex3_3c, h=6, w=6, out.width='.49\\textwidth'>>=
plot(gf.women, xlab = "Queue Length")
distplot(WomenQueue, type = "binomial", size=10, xlab = "Queue Length")
@
    \end{ans}
    
    \item Suggest some reasons why the number of women in queues of length 10
    might depart from a binomial distribution, $\Bin(n=10, p=1/2)$.
    \begin{ans}
    \begin{itemize*}
      \item Perhaps women (or men) are more prevalent in these queues, so $p \ne 1/2$.
      \item People often join lines in groups, so the observations are unlikely to be independent.
    \end{itemize*}
    \end{ans}
    
  \end{enumerate*}

  \exercise Continue \exref{ex:saxfit} on the distribution of male children in families
  in Saxony by fitting a binomial distribution, $\Bin(n=12, p=\frac12)$, specifying
  equal probability for boys and girls. [\emph{Hint}:  you need to specify both \code{size} and
  \code{prob} values for \func{goodfit}.]
  \begin{enumerate*}
    \item Carry out the GOF test for this fixed binomial distribution.
    What is the ratio of $\chi^2 / df$? What do you conclude?
    \begin{ans}
    Note that you need to specify both $n$ and $p$ as fixed parameters here.
    << ex3_4a>>=
    Saxony_gf <-goodfit(Saxony, type = "binomial", par=list(size=12, prob=.5))
    ss <-summary(Saxony_gf)
      #The ratio of Chi-square/df
    ss[,"X^2"] / ss[,"df"]
    @
    The binomial model fits very badly.
    \end{ans}
    
    \item Test the additional lack of fit for the model $\Bin(n=12, p=\frac12)$
    compared to the model $\Bin(n=12, p=\hat{p})$ where $\hat{p}$ is estimated
    from the data.
    \begin{ans}
    << ex3_4b>>=
    Saxony_gf2 <- goodfit(Saxony, type = "binomial", par=list(size=12))
    summary(Saxony_gf2)
    @
    This fits much better, but still not a good fit. 
    \end{ans}
    
    \item Use the \func{plot.gootfit} method to visualize these two models.
    \begin{ans}
<< ex3_4c, h=6, w=6, out.width='.49\\textwidth'>>=
plot(Saxony_gf, main = "Fit for p=0.5", xlab = "Number of Male Children (Out of 12)")
plot(Saxony_gf2, main = "Fit for p=phat", xlab = "Number of Male Children (Out of 12)")
@
    \end{ans}
    
  \end{enumerate*}

  \exercise For the \data{Federalist} data, the examples in \secref{sec:fitdistr} and
  \secref{sec:fitplot} showed the negative binomial to provide an acceptable fit.
  Compare this with the simpler special case of geometric distribution, corresponding
  to $n=1$.
  \begin{enumerate*}
    \item Use \func{goodfit} to fit the geometric distribution. 
    [Hint: use \code{type="nbinomial"}, but specify \code{size=1} as a parameter.]
    \begin{ans}
    << ex3_5a>>=
    fdfit1 <- goodfit(Federalist, type = "binomial", par = list(size=6))
    fdfit1
    fdfit2 <- goodfit(Federalist, type = "nbinomial", par = list(size=1))
    fdfit2
    @
    \end{ans}
    
    \item Compare the negative binomial and the geometric models statistically,
    by a \LR test of the difference between these two models.
    \begin{ans}
<< ex3_5b>>=
summary(fdfit1)
summary(fdfit2)
@
    \end{ans}
    
%\TODO{PC: correct me if I'm wrong, but aren't there models not nested? Wouldn't information criteria therefore be more appropriate?}
    \item Compare the negative binomial and the geometric models visually
    by hanging rootograms or other methods.
    \begin{ans}
    Hanging rootograms:
    << ex3_5c1, h=6, w=6, out.width='.49\\textwidth'>>=
    plot(fdfit1)
    plot(fdfit2)
    @
    Distribution-ness plots:
    << ex3_5c2, h=6, w=6, out.width='.49\\textwidth'>>=
    distplot(Federalist, type = "binomial", size=6, xlab = "Word Count")
    distplot(Federalist, type = "nbinomial", size=6, xlab = "Word Count")
    @
    \end{ans}
    
  \end{enumerate*}

  \exercise \citet[Table 2.4]{MostellerWallace:63} give the frequencies, $n_k$,
  of counts $k = 0, 1, \dots$ of other selected marker words in 247 blocks
  of text known to have been written by Alexander Hamilton.  The data below
  show the occurrences of the word \emph{upon}, that Hamilton used much more than
  did James Madison.
<<upon>>=
count <- 0 : 5
Freq <- c(129, 83, 20, 9, 5, 1)
@
  \begin{enumerate*}
    \item Read these data into \R and construct a one-way table of frequencies of counts
    or a matrix or data frame with frequencies in the first column and the corresponding counts in the second column, 
    suitable for use with \func{goodfit}.
    \begin{ans}
    \texttt{goodfit()} requires its first argument to be either a one-way table (from \texttt{xtabs()}),
    or a data.frame with frequencies in the \emph{first} column and the corresponding counts in the second column.  
    Both of the following forms will work.
    << upon1>>=
    count <- 0:5
    Freq <- c(129, 83, 20, 9, 5, 1)
    sum(Freq)  # check N
    
    (Upon <- data.frame(Freq, count))             # as a data.frame
    (Upon.tab <- xtabs(Freq ~ count, data=Upon))  # one-way table
    
    @    
    \end{ans}
    
    \item Fit and plot the Poisson model for these frequencies.
    \begin{ans}
    << ex3_6b>>=
    (up0 <- goodfit(Upon, type="poisson"))
    summary(up0)
    plot(up0)
    @
    \end{ans}
    
    \item Fit and plot the negative binomial model for these frequencies.
    \begin{ans}
    << ex3_6c>>=
    (up1 <- goodfit(Upon, type="nbinomial"))
    summary(up1)
    plot(up1)
    @
    \end{ans}
    
    \item What do you conclude?
    \begin{ans}
    The negative binomial model fits better than the Poisson.
    \end{ans}
    
  \end{enumerate*}

  \exercise The data frame \data{Geissler} in the \Rpackage{vcdExtra} contains the complete data from Geissler's \citeyearpar{Geissler:1889} tabulation of family sex composition in Saxony.  The table below gives the number of boys in families of size 11.

% latex table generated in R 3.0.1 by xtable 1.7-2 package
% Tue Dec 17 10:15:54 2013
%\begin{table}[ht]
%\centering
\begin{tabular}{r|rrrrrrrrrrrr}
%  \hline
% & 1 & 2 & 3 & 4 & 5 & 6 & 7 & 8 & 9 & 10 & 11 & 12 \\
  \hline
boys &   0 &   1 &   2 &   3 &   4 &   5 &   6 &   7 &   8 &   9 &  10 &  11 \\
  Freq &   8 &  72 & 275 & 837 & 1,540 & 2,161 & 2,310 & 1,801 & 1,077 & 492 &  93 &  24 \\
   \hline
\end{tabular}
%\end{table}
% the table is better
<<saxony11,echo=FALSE, results='hide'>>=
Saxony11 <- structure(list(boys = 0:11, Freq = c(8L, 72L, 275L, 837L, 1540L,
2161L, 2310L, 1801L, 1077L, 492L, 93L, 24L)), .Names = c("boys",
"Freq"), row.names = c(NA, -12L), class = "data.frame")
t(Saxony11)
@
  \begin{enumerate*}
    \item Read these data into \R.
    \begin{ans}
    See Exercise 2.6, which calculates \texttt{sax11} in the form of a data frame.
    \end{ans}

    \item Following \exref{ex:saxfit}, use \func{goodfit} to fit the binomial model and plot the
    results.  Is there an indication that the binomial does not fit these data?
    \begin{ans}
<< ex3_7b>>=
sax11.tab <- xtabs(Freq ~ boys, data=sax11)
goodfit(sax11.tab, type="binomial", par=list(size=11))
summary(goodfit(sax11.tab, type="binomial", par=list(size=11)))
@
    \end{ans}
    
    \item Diagnose the form of the distribution using the methods described in \secref{sec:discrete-ord}.
    \begin{ans}
<< ex3_7c>>=
Ord_plot(sax11.tab)
distplot(sax11.tab, type="binomial", size=11)
@
    \end{ans}
    
    \item Try fitting the negative binomial distribution, and use \func{distplot} to diagnose
    whether the negative binomial is a reasonable fit.
    \begin{ans}
<< ex3_7d>>=
goodfit(sax11.tab, type="nbinomial", par=list(size=11))
@
    \end{ans}
    
  \end{enumerate*}

  \exercise The data frame \data{Bundesliga} gives a similar data set to that for UK soccer scores
  (\data{UKSoccer})
  examined in \exref{ex:soccer}, but over a wide range of years.  The following lines calculate
  a two-way table, \code{BL1995}, of home-team and away-team goals
  for the 306 games in the year 1995.
<<BL1995>>=
data("Bundesliga", package = "vcd")
BL1995 <- xtabs(~ HomeGoals + AwayGoals, data = Bundesliga,
                subset = (Year == 1995))
BL1995
@
  \begin{enumerate*}
    \item As in , find the one-way distributions of \code{HomeGoals},
    \code{AwayGoals}, and \code{TotalGoals = HomeGoals + AwayGoals}.
    \begin{ans}
    There are several ways to do this, but as illustrated in the text for \exref{ex:soccer}, 
    create the one-way variables in a \code{data.frame}, and then use \func{xtabs}
    to get their marginal distributions.
    << ex3_8a>>=
    BL.df <- as.data.frame(BL1995, stringsASFactors=FALSE)
    BL.df <- within(BL.df, {
      HomeGoals <- as.numeric(HomeGoals)
      AwayGoals <- as.numeric(AwayGoals)
      TotalGoals <- HomeGoals + AwayGoals
      })
       # marginal distributions
    (BL.home <- xtabs(Freq ~ HomeGoals, data=BL.df))
    (BL.away <- xtabs(Freq ~ AwayGoals, data=BL.df))
    (BL.total <- xtabs(Freq ~ TotalGoals, data=BL.df))
    @
    \end{ans}
    
    \item Use \func{goodfit} to fit and plot the Poisson distribution to each of these.  Does the
    Poisson seem to provide a reasonable fit?
    \begin{ans}
    The Poisson distribution has a bad fit for all of these.
    <<ex3_8b>>=
    summary(goodfit(BL.home))
    summary(goodfit(BL.away))
    summary(goodfit(BL.total))
    @
    \end{ans}
    
    \item Use \func{distplot} to assess fit of the Poisson distribution.
    \begin{ans}
    The distribution plots for home goals looks better than that for away goals, which shows
    a systematic departure from the red line.
    <<ex3_8c>>=
    distplot(BL.home, xlab="Number of home goals")
    distplot(BL.away, xlab="Number of away goals")
    @
    \end{ans}
    
    \item What circumstances of scoring goals in soccer might cause these distributions to
    deviate from Poisson distributions?
    \begin{ans}
    The Poisson distribution relies on (a) independent events with (b) constant probabilities. The probability of scoring a goal 
    is almost certainly not constant over all pairs of teams.
    \end{ans}
    
  \end{enumerate*}

  \exercise\exhard
  Repeat the exercise above, this time using the data for all years in which there was
  the standard number (306) of games, that is for \code{Year>1965}, tabulated as shown below.
<<BLall>>=
BL <- xtabs(~ HomeGoals + AwayGoals, data = Bundesliga,
            subset = (Year > 1965))
BL
@
    \begin{ans}
    The steps are similar to those in the previous problem, but now there are more years, and the
    range of both home goals and away goals is larger.
    \end{ans}


\exercise Using the data \data{CyclingDeaths} introduced in \exref{ex:cyclists1}
and the one-way frequency table \code{CyclingDeaths.tab = table(CyclingDeaths$deaths)}, %$
  \begin{enumerate*}
    \item Make a sensible plot of the number of deaths over time. For extra credit,
    add a smoothed curve (e.g., using \code{lines(lowess(...))}).
    \begin{ans}
    The number of deaths in a given fortnight are discrete, taking values \code{0:3}.
    A barplot, using \code{plot(deaths ~ date, type="h", data=CyclingDeaths)} is one
    option.  Perhaps slightly better is to jitter the number of deaths.
    << ex3_10a>>=
    data("CyclingDeaths", package="vcdExtra")
    CyclingDeaths.tab <- table(CyclingDeaths$deaths)
    plot(jitter(deaths) ~ date, data=CyclingDeaths)
    with(CyclingDeaths, {lines(lowess(date, deaths), lwd=3, col="blue")})
    @
    \end{ans}
    
    \item Test the goodness of fit of the table \code{CyclingDeaths.tab} to
    a Poisson distribution statistically using \func{goodfit}.
    \begin{ans}
    <<ex3_10b>>=
    gf <- goodfit(CyclingDeaths.tab)
    gf
    summary(gf)
    @
    \end{ans}
    
    \item Continue this analysis using a \func{rootogram} and \func{distplot}.
    \begin{ans}
    <<ex3_10c>>=
    rootogram(gf, xlab="Number of Deaths")
    distplot(CyclingDeaths.tab)
    @
    \end{ans}
    
    \item Write a one-paragraph summary of the results of these analyses and your
    conclusions.
    \begin{ans}
    \end{ans}
    
  \end{enumerate*}

<<depends, echo=FALSE, results='hide'>>=
Depends <- structure(c(986L, 1347L, 993L, 685L, 375L, 298L, 155L, 65L, 32L,
19L, 9L, 4L, 9L, 4L, 2L), .Dim = 15L, .Dimnames = structure(list(
    Depends = c("0", "1", "2", "3", "4", "5", "6", "7", "8",
    "9", "10", "11", "12", "13", "14")), .Names = "Depends"), class = "table")
@
\exercise\exhard
  The one-way table, \data{Depends}, in \pkg{vcdExtra} and shown below gives the frequency
  distribution of the number of dependencies declared in $4,983$ \R packages
  maintained on the CRAN distribution network on January 17, 2014. That is, there were 986
  packages that had no dependencies, $1,347$ packages that depended on one other package, $\dots$
  up to 2 packages that depended on 14 other packages.

% \TODO{Perhaps promote this table to an introductory
% example, leaving analysis to this exercise.}
% latex table generated in R 3.0.1 by xtable 1.7-1 package
% Fri Jan 17 09:50:19 2014
\begin{table}[ht]
\centering
\begin{tabular}{r|rrrrrrrrrrrrrrr}
  \hline
Depends & 0 & 1 & 2 & 3 & 4 & 5 & 6 & 7 & 8 & 9 & 10 & 11 & 12 & 13 & 14 \\
  \hline
\# Pkgs & 986 & 1,347 & 993 & 685 & 375 & 298 & 155 &  65 &  32 &  19 &   9 &   4 &   9 &   4 &   2 \\
   \hline
\end{tabular}
\end{table}

    \begin{enumerate*}
      \item Make a bar plot of this distribution.
      \begin{ans}
      <<ex3_11a>>=
      data("Depends", package="vcdExtra")
      plot(Depends, xlab="Number of Dependencies", ylab="Number of R Packages", lwd=8)
      @
      \end{ans}
      
      \item Use \func{Ord\_plot} to see if this method can diagnose the form of the distribution.
      \begin{ans}
      This turns out to be a case where the Ord plot method, as implemented in
      \func{Ord\_plot} does not determine the form of the distribution.  According to 
      \tabref{tab:ordparm}, the log series distribution is the only one with positive
      slope $b$ and negative intercept $a$, but this requires $a = -b$. 
      %\TODO{Is this a bug in Ord\_plot?}
      <<ex3_11b>>=
      Ord_plot(Depends)
      @
      \end{ans}
      
      \item Try to fit a reasonable distribution to describe dependencies among \R packages.
      \begin{ans}
      Among the distributions described in Chapter 3 and implemented in the \pkg{vcd} package
      the negative binomial may be the best to try.
      <<ex3_11c>>=
      dep.gf <- goodfit(Depends, type="nbinomial")
      summary(dep.gf)
      plot(dep.gf, xlab="Number of dependencies")
      distplot(Depends, type="nbinomial")
      @
      So, this does not fit well, particularly for the packages with many dependencies, but
      it is not altogether terrible.
      The remaining differences come from further heterogeneity for which we haven't got any covariates in the data set. 
      For example, the age of the package would seem like a natural candidate: older packages probably have fewer dependencies.
      \end{ans}
      
    \end{enumerate*}

\exercise\exhard How many years does it take to get into the baseball Hall of Fame?
  The \Rpackage{Lahman} provides a complete record of historical baseball statistics from 1871 to
  the present.  One table, \data{HallOfFame}, records the history of players nominated to
  the Baseball Hall of Fame, and those eventually inducted.  The table below, calculated
  in \help{HallOfFame, package="Lahman"}, records the distribution of the number of years
  taken (from first nomination)
  for the 109 players in the Hall of Fame to be inducted (1936--present).
  Note that \code{years==0} does not, and cannot, occur in this table, so the distribution
  is restricted to positive counts.  Such distributions are called \term{zero-truncated distribution}s.
  Such distributions are like the ordinary ones, but with the probability of zero being zero.
  Thus the other probabilities are scaled up (i.e., divided by $1-\Pr(Y=0)$) so they sum to 1.

% latex table generated in R 3.0.3 by xtable 1.7-3 package
% Sun Sep 14 12:03:39 2014
\begin{tabular}{r|rrrrrrrrrrrrrrr}
  \hline
years    & 1 & 2 & 3 & 4 & 5 & 6 & 7 & 8 & 9 & 10 & 11 & 12 & 13 & 14 & 15 \\
%  \hline
inducted &  46 &  10 &   8 &   7 &   8 &   4 &   2 &   4 &   6 &   3 &   3 &   1 &   4 &   1 &   2 \\
   \hline
\end{tabular}

    \begin{enumerate*}
      \item For the Poisson distribution, show that the zero-truncated probability function can be expressed in the
      form
			\begin{equation*}
			\Pr \{ X = k \given k>0\} =
			  \frac{1}{1-e^{-\lambda}} \times
			  \frac{ e^{ - \lambda } \:  \lambda^k } { k ! }
			  \quad\quad k = 1, 2, \dots
			\end{equation*}
			\begin{ans}
			The standard Poisson distribution has the probability mass function 
			$\Pr \{ X = k \} =  \frac{ e^{ - \lambda } \:  \lambda^k } { k ! } \quad k = 1, 2, \dots$.
			For this, $\Pr \{ X = 0 \} =  e^{ - \lambda }$. The formula given in the problem
			scales the standard probability to account for zero-truncation.
			\end{ans}
			

      \item Show that the mean is $\lambda/(1-\exp(-\lambda))$.
      \begin{ans}
      \end{ans}
      
      \item Enter these data into \R as a one-way table, and use \func{goodfit} to fit the standard
      Poisson distribution, as if you hadn't encountered the problem of zero truncation.
      \begin{ans}
      The rootogram below shows why zero truncation needs to be taken into account.
      <<ex3_12c>>=
      years <- 1:15
      inducted <- c(46, 10,  8,  7,  8,  4,  2,  4,  6,  3,  3,  1,  4,  1,  2)
      HOF.df <- data.frame(years, inducted)
      HOF.tab <- xtabs(inducted ~ years, data=HOF.df)
      goodfit(HOF.tab)
      summary(HOF.tab)
      plot(goodfit(HOF.tab), xlab='Number of years to HOF election')
      @
      Though not asked in the problem, the zero-truncated Poisson distribution can be fit using \func{vglm}
      in the \Rpackage{VGAM}. \TODO{One of these is not right.}
      <<>>=
      library(VGAM)
      hof.tpois0 <- vglm(years ~ 1, family=pospoisson, data=HOF.df, weights=inducted)
      hof.tpois0
      
      hof.tpois1 <- vglm(inducted ~ years, family=pospoisson, data=HOF.df)
      hof.tpois1
      @
      Models for count data, taking account of excess zeros or zero truncation are examined in more detail
      in Chapter 11.  There, we use the \Rpackage{countreg}, that provides a \func{zerotrunc} for these
      problems.  The zero truncated negative binomial provides a better fit than the zero truncated Poisson.
      <<ex3_12d>>=
      library(countreg)
      hof.zerot0 <- zerotrunc(years ~ 1, weights = inducted, data=HOF.df)
      hof.zerot1 <- zerotrunc(years ~ 1, weights = inducted, dist="negbin")
      countreg::rootogram(hof.zerot0)
      countreg::rootogram(hof.zerot1)
      @

      \end{ans}
      

    \end{enumerate*}


\end{Exercises}

